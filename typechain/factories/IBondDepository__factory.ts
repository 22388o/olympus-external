/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IBondDepository,
  IBondDepositoryInterface,
} from "../IBondDepository";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "bondInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "payout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vesting",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePaid",
            type: "uint256",
          },
        ],
        internalType: "struct IBondDepository.Bond",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "payoutFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IBondDepository__factory {
  static readonly abi = _abi;
  static createInterface(): IBondDepositoryInterface {
    return new utils.Interface(_abi) as IBondDepositoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBondDepository {
    return new Contract(address, _abi, signerOrProvider) as IBondDepository;
  }
}
